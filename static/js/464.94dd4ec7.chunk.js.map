{"version":3,"file":"static/js/464.94dd4ec7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","redux/selectors.js","components/ContactForm/contactForm.js","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/contactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/pages/Phonebook/Phonebook.module.css?1c37","pages/Phonebook/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__dyO4h\",\"inputs\":\"contactForm_inputs__4gsL-\",\"margin\":\"contactForm_margin__7zKWN\",\"label\":\"contactForm_label__WakW9\"};","export const selectTasks = state => state.contacts.items;\n\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\nimport css from './contactForm.module.css';\nimport { selectTasks } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { BiUser, BiPhone } from 'react-icons/bi';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectTasks);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const inputValue = form.elements.text.value;\n    const contactExists = contacts.find(\n      contact => contact.name.toLowerCase() === inputValue.toLowerCase()\n    );\n    if (contactExists) {\n      alert(`${inputValue} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: inputValue,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.container}>\n      <div className={css.margin}>\n        <span style={{ position: 'absolute', margin: '8px 8px 6px 6px'  }}>\n          <BiUser viewBox=\"-2 -2 24 24\" />\n        </span>\n        <input\n          className={css.inputs}\n          type=\"text\"\n          name=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={css.margin}>\n        <span style={{ position: 'absolute', margin: '8px 8px 6px 6px' }}>\n          <BiPhone viewBox=\"0 0 22 22\" />\n        </span>\n        <input\n          className={css.inputs}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button color='info' type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"contactList_contact__list__d41H4\",\"contact__list__item\":\"contactList_contact__list__item__FCvbO\",\"contact__style\":\"contactList_contact__style__z-QGP\",\"contact__list__name\":\"contactList_contact__list__name__sPhX8\",\"contact__list__number\":\"contactList_contact__list__number__R4IAi\",\"del__button\":\"contactList_del__button__Lf-F+\"};","import { Button } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectStatusFilter, selectTasks } from 'redux/selectors';\nimport css from './contactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectTasks);\n  const filter = useSelector(selectStatusFilter).toLowerCase();\n  const dataNormalize = filter.toLowerCase();\n  const normalizedContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(dataNormalize)\n  );\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <ul className={css.contact__list}>\n        {normalizedContacts.map(contact => (\n          <li key={contact.id} className={css.contact__list__item}>\n            <div className={css.contact__style}>\n              <span className={css.contact__list__name}>{contact.name}</span>\n              <span className={css.contact__list__number}>\n                : {contact.number}\n              </span>\n            </div>\n            < Button className={css.del__button} color=\"error\" onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search-box\":\"Filter_search-box__2IFmO\",\"filter__input\":\"Filter_filter__input__toa89\",\"search__button\":\"Filter_search__button__M9Y2Q\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { change } from '../../redux/filtersSlice';\nimport { nanoid } from 'nanoid';\nimport { selectStatusFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nconst filterInputId = nanoid();\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(change(e.target.value));\n  };\n\n  return (\n    <div className={css['search-box']}>\n      <label htmlFor={filterInputId}></label>\n      <input\n        className={css['filter__input']}\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      ></input>\n        <button className={css['search__button']}></button>       \n    </div>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"one\":\"Phonebook_one__Ijs9o\"};","import { ContactsForm } from '../../components/ContactForm/contactForm';\nimport { ContactList } from '../../components/ContactList/contactList';\nimport { ContactFilter } from 'components/Filter/Filter';\nimport { Loader } from 'components/loader/loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.one}>\n      <h1>Phonebook</h1>\n      <ContactsForm></ContactsForm>\n      <h2>Contacts</h2>\n      <ContactFilter></ContactFilter>\n      <ContactList />\n      {isLoading && !error && <Loader />}\n    </div>\n  );\n}\n"],"names":["selectTasks","state","contacts","items","selectStatusFilter","filters","selectIsLoading","isLoading","selectError","error","ContactsForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","inputValue","elements","text","value","find","contact","name","toLowerCase","alert","addContact","number","reset","className","css","style","position","margin","viewBox","type","pattern","title","required","Button","color","ContactList","dataNormalize","normalizedContacts","filter","includes","map","onClick","deleteContact","id","filterInputId","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","ContactFilter","htmlFor","onChange","e","change","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}